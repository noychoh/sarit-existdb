#+TITLE: Docker image for SARIT’s web application

* Running the default image

If you have [[https://www.docker.com/][docker]] installed, you should be able to run a pre-built
image like this:

~docker run patmcall/sarit-existdb~ 

After a while, something like this should appear:

#+BEGIN_SRC sh
19 Apr 2017 12:16:17,721 [main] INFO  (JettyStart.java [run]:257) - ----------------------------------------------------- 
19 Apr 2017 12:16:17,722 [main] INFO  (JettyStart.java [run]:258) - Server has started, listening on: 
19 Apr 2017 12:16:17,723 [main] INFO  (JettyStart.java [run]:260) -     http://172.17.0.42:8080/ 
19 Apr 2017 12:16:17,724 [main] INFO  (JettyStart.java [run]:260) -     https://172.17.0.42:8443/ 
19 Apr 2017 12:16:17,724 [main] INFO  (JettyStart.java [run]:263) - Configured contexts: 
19 Apr 2017 12:16:17,726 [main] INFO  (JettyStart.java [run]:269) -     /exist 
19 Apr 2017 12:16:17,727 [main] INFO  (JettyStart.java [run]:269) -     / 
19 Apr 2017 12:16:17,727 [main] INFO  (JettyStart.java [run]:323) - ----------------------------------------------------- 
#+END_SRC

This tells you where you can access the existdb instance, in this case
~http://172.17.0.42:8080/~.


The image is *large*, slightly more than 2 GB: this is because it
contains a pre-built index of SARIT’s library and a full JDK.  Having
the index in place saves start-up time for the image, and the JDK is
necessary for building exist (see [[file:~/webstuff/sarit-webapp/exist-things/sarit-exist-webapp/README.org::exist-bugs][file:../README.org::exist-bugs]]).

*SECURITY NOTICE*: no attempt is made to set up password protection,
the username is the default, "admin", and the password is empty.

* Building the images

1) file:./Dockerfile: this builds things from the upstream
   (https://github.com/sarit) repositories.

2) file:./Dockerfile_use_local: this recipe builds the application
   from the locally available sources (usually the *.xar files in the
   various submodules) (currently this is not working, just use the
   build script in the meantime).

** Without the current data

 If you want to put your own data into a local version of SARIT’s
 webapp or change something in the application, you can build a local
 docker image:

 #+BEGIN_SRC sh
 docker build -f docker-sarit-app/Dockerfile -t sarit-webapp . > /tmp/docker-build.log 2>&1
 #+END_SRC

 from this repository’s root directory (file:../).  This will build the
 webapp alone, without SARIT’s library. 


** With the current data
<<docker-build-with-data>>

To build a version with the data, run

 #+BEGIN_SRC sh
 docker build -f docker-sarit-data/Dockerfile -t sarit-webapp-with-data . > /tmp/docker-build.log 2>&1
 #+END_SRC

Note that this builds on the previous image, so if you have updated
both the application and the data you will need to rebuild *both*
images.

** Run the images

 In case of success, run:

#+BEGIN_SRC bash
docker run --rm -p 127.0.0.1:8080:8080 --name sarit-webapp-with-data sarit-webapp-with-data:latest
#+END_SRC

which should allow you to see the SARIT app on
http://localhost:8080/exist/apps/sarit-pm/works/.


* Docker cheat-sheet

** Find containers

#+BEGIN_SRC sh
docker ps
docker ps -a
docker container
docker container ls -a
#+END_SRC

** ‘Log in’ to the container

#+BEGIN_SRC sh
docker exec -i -t <CONTAINER-ID> /bin/bash
#+END_SRC

** Logs

Get the logs from inside the container:

#+BEGIN_SRC sh
docker ps
docker cp <CONTAINER-ID>:/opt/lib/sarit-existdb/exist/webapp/WEB-INF/logs/ /tmp/docker-exist-logs/
#+END_SRC


** Cleaninug up

 #+BEGIN_SRC sh
 docker container ls
 docker images
 docker ps -a

 docker container rm CONTAINER
 docker rmi IMAGE # to remove an image
 #+END_SRC

** Inspecting images

#+BEGIN_SRC sh
docker images
docker history sarit/webapp:0.1
docker history --no-trunc=true sarit/webapp:0.1
#+END_SRC

The ~history~ commands allow us to see the size of the intermediate
images, the largest ones (~grep MB~) being:

| Step/Note                                                                                         | Command                                                                                                       | Size    |
|---------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------+---------|
| Index file:../sarit-data                                                                          | /bin/sh -c ./start-and-kill-exist.sh                                                                          | 756 MB  |
| Add file:../sarit-data/build/sarit-data-0.1.xar                                                   | /bin/sh -c #(nop) ADD file:cfe07d1c9758f0d7e9b0dec3fb8607658279485d7cf4917ddf915c31011819dd in ./autodeploy/  | 50.3 MB |
| Start and stop exist to load file:../sarit-pm                                                     | /bin/sh -c ./start-and-kill-exist.sh                                                                          | 212 MB  |
| Add file:../sarit-pm/build/sarit-pm-0.2.xar                                                       | /bin/sh -c #(nop) ADD file:f0c8b36f2481b44437b17639808c0ff5cd2fd185c80c17beca7f62bf13567b35 in ./             | 8.34 MB |
| Add file:./sarit-transliteration-exist-module/target/sarit-transliteration-exist-module-0.0.8.xar | /bin/sh -c #(nop) ADD file:99da90335da1b334091995efafc8a671ebfcd2efe917e733a309af701d495f8b in ./             | 1.32 MB |
| Build exist                                                                                       | /bin/sh -c ./build.sh clean && ./build.sh                                                                     | 214 MB  |
| Add file:../lucene-transcoding-analyzer/target/lucene-transcoding-analyzer-0.1.7.jar              | /bin/sh -c #(nop) ADD file:af3b2d1e33ba6edbd68e78bad6c8098790c41f4c89c1ed537242dbb61551df44 in ./             | 1.15 MB |
| Add http://sanskritlibrary.org/software/transcodeFile.zip                                         | /bin/sh -c #(nop) ADD tarsum.v1+sha256:28beb9039a1e465b515fc678c3c8daa4504187f2e6d58acc756175386294dbea in ./ | 1.97 MB |
| Add exist source directory                                                                        | /bin/sh -c #(nop) ADD dir:2c54cf28d29d5888e598a9a3c852b87c0d8a9bdb3f3ec1099444490072e35af2 in ./              | 123 MB  |
| Install build requirements for existdb                                                            | /bin/sh -c apt-get update && apt-get -y --no-install-recommends install ant && apt-get clean                  | 15.1 MB |


In terms of size, it’s not very economical to deliver the fully
indexed sarit-data collection.  But it does save time in startup: if
we’d only use the ./autodeploy/ directory (saving 756MB + 212MB), we
would have to rebuild and reindex everything on every ~docker run~
command.

* Resources

1) Official documentation for using file:Dockerfile: https://docs.docker.com/engine/reference/builder/
2) Tips: https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/
3) Example of a Debian-based eXistdb docker: https://github.com/davidgaya/docker-eXistDB/
